$date
	Wed Apr 28 15:19:36 2021
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module testbench $end
$var reg 1 ! clk $end
$var reg 1 " rst_n $end
$var integer 32 # count [31:0] $end
$var integer 32 $ fp_w [31:0] $end
$scope module cpu $end
$var wire 1 ! clk_i $end
$var wire 32 % imm_4 [31:0] $end
$var wire 1 " rst_i $end
$var wire 1 & zero $end
$var wire 32 ' pc_o [31:0] $end
$var wire 32 ( pc_i [31:0] $end
$var wire 1 ) overflow $end
$var wire 32 * instr [31:0] $end
$var wire 1 + cout $end
$var wire 1 , RegWrite $end
$var wire 32 - RTdata_o [31:0] $end
$var wire 32 . RSdata_o [31:0] $end
$var wire 32 / ALUresult [31:0] $end
$var wire 4 0 ALU_control [3:0] $end
$var wire 1 1 ALUSrc $end
$var wire 2 2 ALUOp [1:0] $end
$scope module ALU_Ctrl $end
$var wire 4 3 instr [3:0] $end
$var wire 3 4 funct3 [2:0] $end
$var wire 2 5 ALUOp [1:0] $end
$var reg 4 6 ALU_Ctrl_o [3:0] $end
$upscope $end
$scope module Decoder $end
$var wire 7 7 opcode [6:0] $end
$var wire 32 8 instr_i [31:0] $end
$var wire 3 9 funct3 [2:0] $end
$var wire 1 , RegWrite $end
$var wire 3 : Instr_field [2:0] $end
$var wire 9 ; Ctrl_o [8:0] $end
$var wire 1 < Branch $end
$var wire 1 1 ALUSrc $end
$var wire 2 = ALUOp [1:0] $end
$upscope $end
$scope module IM $end
$var wire 32 > instr_o [31:0] $end
$var wire 32 ? addr_i [31:0] $end
$var integer 32 @ i [31:0] $end
$upscope $end
$scope module PC $end
$var wire 1 ! clk_i $end
$var wire 1 " rst_i $end
$var wire 32 A pc_i [31:0] $end
$var reg 32 B pc_o [31:0] $end
$upscope $end
$scope module PC_plus_4_Adder $end
$var wire 32 C src1_i [31:0] $end
$var wire 32 D src2_i [31:0] $end
$var wire 32 E sum_o [31:0] $end
$upscope $end
$scope module RF $end
$var wire 5 F RDaddr_i [4:0] $end
$var wire 5 G RSaddr_i [4:0] $end
$var wire 32 H RSdata_o [31:0] $end
$var wire 5 I RTaddr_i [4:0] $end
$var wire 32 J RTdata_o [31:0] $end
$var wire 1 , RegWrite_i $end
$var wire 1 ! clk_i $end
$var wire 1 " rst_i $end
$var wire 32 K RDdata_i [31:0] $end
$upscope $end
$scope module alu $end
$var wire 4 L ALU_control [3:0] $end
$var wire 1 " rst_n $end
$var wire 32 M src1 [31:0] $end
$var wire 32 N src2 [31:0] $end
$var wire 2 O operation [1:0] $end
$var wire 32 P Wire_result [31:0] $end
$var wire 1 Q Binvert $end
$var wire 1 R Ainvert $end
$var reg 1 + cout $end
$var reg 1 ) overflow $end
$var reg 32 S result [31:0] $end
$var reg 1 & zero $end
$scope begin genblk1[1] $end
$upscope $end
$scope begin genblk1[2] $end
$upscope $end
$scope begin genblk1[3] $end
$upscope $end
$scope begin genblk1[4] $end
$upscope $end
$scope begin genblk1[5] $end
$upscope $end
$scope begin genblk1[6] $end
$upscope $end
$scope begin genblk1[7] $end
$upscope $end
$scope begin genblk1[8] $end
$upscope $end
$scope begin genblk1[9] $end
$upscope $end
$scope begin genblk1[10] $end
$upscope $end
$scope begin genblk1[11] $end
$upscope $end
$scope begin genblk1[12] $end
$upscope $end
$scope begin genblk1[13] $end
$upscope $end
$scope begin genblk1[14] $end
$upscope $end
$scope begin genblk1[15] $end
$upscope $end
$scope begin genblk1[16] $end
$upscope $end
$scope begin genblk1[17] $end
$upscope $end
$scope begin genblk1[18] $end
$upscope $end
$scope begin genblk1[19] $end
$upscope $end
$scope begin genblk1[20] $end
$upscope $end
$scope begin genblk1[21] $end
$upscope $end
$scope begin genblk1[22] $end
$upscope $end
$scope begin genblk1[23] $end
$upscope $end
$scope begin genblk1[24] $end
$upscope $end
$scope begin genblk1[25] $end
$upscope $end
$scope begin genblk1[26] $end
$upscope $end
$scope begin genblk1[27] $end
$upscope $end
$scope begin genblk1[28] $end
$upscope $end
$scope begin genblk1[29] $end
$upscope $end
$scope begin genblk1[30] $end
$upscope $end
$scope begin genblk1[31] $end
$upscope $end
$scope begin genblk2[0] $end
$scope module ALU_1bin_obj $end
$var event 1 T _s28 $end
$var wire 1 R Ainvert $end
$var wire 1 Q Binvert $end
$var wire 1 U Cin $end
$var wire 1 V aAndb $end
$var wire 1 W aOrb $end
$var wire 2 X operation [1:0] $end
$var wire 1 Y src1 $end
$var wire 1 Z src2 $end
$var wire 1 [ tmp_b $end
$var wire 1 \ tmp_a $end
$var wire 2 ] aAddb [1:0] $end
$var reg 1 ^ cout $end
$var reg 1 _ result $end
$upscope $end
$upscope $end
$scope begin genblk2[1] $end
$scope module ALU_1bin_obj $end
$var event 1 ` _s28 $end
$var wire 1 R Ainvert $end
$var wire 1 Q Binvert $end
$var wire 1 a Cin $end
$var wire 1 b aAndb $end
$var wire 1 c aOrb $end
$var wire 2 d operation [1:0] $end
$var wire 1 e src1 $end
$var wire 1 f src2 $end
$var wire 1 g tmp_b $end
$var wire 1 h tmp_a $end
$var wire 2 i aAddb [1:0] $end
$var reg 1 j cout $end
$var reg 1 k result $end
$upscope $end
$upscope $end
$scope begin genblk2[2] $end
$scope module ALU_1bin_obj $end
$var event 1 l _s28 $end
$var wire 1 R Ainvert $end
$var wire 1 Q Binvert $end
$var wire 1 m Cin $end
$var wire 1 n aAndb $end
$var wire 1 o aOrb $end
$var wire 2 p operation [1:0] $end
$var wire 1 q src1 $end
$var wire 1 r src2 $end
$var wire 1 s tmp_b $end
$var wire 1 t tmp_a $end
$var wire 2 u aAddb [1:0] $end
$var reg 1 v cout $end
$var reg 1 w result $end
$upscope $end
$upscope $end
$scope begin genblk2[3] $end
$scope module ALU_1bin_obj $end
$var event 1 x _s28 $end
$var wire 1 R Ainvert $end
$var wire 1 Q Binvert $end
$var wire 1 y Cin $end
$var wire 1 z aAndb $end
$var wire 1 { aOrb $end
$var wire 2 | operation [1:0] $end
$var wire 1 } src1 $end
$var wire 1 ~ src2 $end
$var wire 1 !" tmp_b $end
$var wire 1 "" tmp_a $end
$var wire 2 #" aAddb [1:0] $end
$var reg 1 $" cout $end
$var reg 1 %" result $end
$upscope $end
$upscope $end
$scope begin genblk2[4] $end
$scope module ALU_1bin_obj $end
$var event 1 &" _s28 $end
$var wire 1 R Ainvert $end
$var wire 1 Q Binvert $end
$var wire 1 '" Cin $end
$var wire 1 (" aAndb $end
$var wire 1 )" aOrb $end
$var wire 2 *" operation [1:0] $end
$var wire 1 +" src1 $end
$var wire 1 ," src2 $end
$var wire 1 -" tmp_b $end
$var wire 1 ." tmp_a $end
$var wire 2 /" aAddb [1:0] $end
$var reg 1 0" cout $end
$var reg 1 1" result $end
$upscope $end
$upscope $end
$scope begin genblk2[5] $end
$scope module ALU_1bin_obj $end
$var event 1 2" _s28 $end
$var wire 1 R Ainvert $end
$var wire 1 Q Binvert $end
$var wire 1 3" Cin $end
$var wire 1 4" aAndb $end
$var wire 1 5" aOrb $end
$var wire 2 6" operation [1:0] $end
$var wire 1 7" src1 $end
$var wire 1 8" src2 $end
$var wire 1 9" tmp_b $end
$var wire 1 :" tmp_a $end
$var wire 2 ;" aAddb [1:0] $end
$var reg 1 <" cout $end
$var reg 1 =" result $end
$upscope $end
$upscope $end
$scope begin genblk2[6] $end
$scope module ALU_1bin_obj $end
$var event 1 >" _s28 $end
$var wire 1 R Ainvert $end
$var wire 1 Q Binvert $end
$var wire 1 ?" Cin $end
$var wire 1 @" aAndb $end
$var wire 1 A" aOrb $end
$var wire 2 B" operation [1:0] $end
$var wire 1 C" src1 $end
$var wire 1 D" src2 $end
$var wire 1 E" tmp_b $end
$var wire 1 F" tmp_a $end
$var wire 2 G" aAddb [1:0] $end
$var reg 1 H" cout $end
$var reg 1 I" result $end
$upscope $end
$upscope $end
$scope begin genblk2[7] $end
$scope module ALU_1bin_obj $end
$var event 1 J" _s28 $end
$var wire 1 R Ainvert $end
$var wire 1 Q Binvert $end
$var wire 1 K" Cin $end
$var wire 1 L" aAndb $end
$var wire 1 M" aOrb $end
$var wire 2 N" operation [1:0] $end
$var wire 1 O" src1 $end
$var wire 1 P" src2 $end
$var wire 1 Q" tmp_b $end
$var wire 1 R" tmp_a $end
$var wire 2 S" aAddb [1:0] $end
$var reg 1 T" cout $end
$var reg 1 U" result $end
$upscope $end
$upscope $end
$scope begin genblk2[8] $end
$scope module ALU_1bin_obj $end
$var event 1 V" _s28 $end
$var wire 1 R Ainvert $end
$var wire 1 Q Binvert $end
$var wire 1 W" Cin $end
$var wire 1 X" aAndb $end
$var wire 1 Y" aOrb $end
$var wire 2 Z" operation [1:0] $end
$var wire 1 [" src1 $end
$var wire 1 \" src2 $end
$var wire 1 ]" tmp_b $end
$var wire 1 ^" tmp_a $end
$var wire 2 _" aAddb [1:0] $end
$var reg 1 `" cout $end
$var reg 1 a" result $end
$upscope $end
$upscope $end
$scope begin genblk2[9] $end
$scope module ALU_1bin_obj $end
$var event 1 b" _s28 $end
$var wire 1 R Ainvert $end
$var wire 1 Q Binvert $end
$var wire 1 c" Cin $end
$var wire 1 d" aAndb $end
$var wire 1 e" aOrb $end
$var wire 2 f" operation [1:0] $end
$var wire 1 g" src1 $end
$var wire 1 h" src2 $end
$var wire 1 i" tmp_b $end
$var wire 1 j" tmp_a $end
$var wire 2 k" aAddb [1:0] $end
$var reg 1 l" cout $end
$var reg 1 m" result $end
$upscope $end
$upscope $end
$scope begin genblk2[10] $end
$scope module ALU_1bin_obj $end
$var event 1 n" _s28 $end
$var wire 1 R Ainvert $end
$var wire 1 Q Binvert $end
$var wire 1 o" Cin $end
$var wire 1 p" aAndb $end
$var wire 1 q" aOrb $end
$var wire 2 r" operation [1:0] $end
$var wire 1 s" src1 $end
$var wire 1 t" src2 $end
$var wire 1 u" tmp_b $end
$var wire 1 v" tmp_a $end
$var wire 2 w" aAddb [1:0] $end
$var reg 1 x" cout $end
$var reg 1 y" result $end
$upscope $end
$upscope $end
$scope begin genblk2[11] $end
$scope module ALU_1bin_obj $end
$var event 1 z" _s28 $end
$var wire 1 R Ainvert $end
$var wire 1 Q Binvert $end
$var wire 1 {" Cin $end
$var wire 1 |" aAndb $end
$var wire 1 }" aOrb $end
$var wire 2 ~" operation [1:0] $end
$var wire 1 !# src1 $end
$var wire 1 "# src2 $end
$var wire 1 ## tmp_b $end
$var wire 1 $# tmp_a $end
$var wire 2 %# aAddb [1:0] $end
$var reg 1 &# cout $end
$var reg 1 '# result $end
$upscope $end
$upscope $end
$scope begin genblk2[12] $end
$scope module ALU_1bin_obj $end
$var event 1 (# _s28 $end
$var wire 1 R Ainvert $end
$var wire 1 Q Binvert $end
$var wire 1 )# Cin $end
$var wire 1 *# aAndb $end
$var wire 1 +# aOrb $end
$var wire 2 ,# operation [1:0] $end
$var wire 1 -# src1 $end
$var wire 1 .# src2 $end
$var wire 1 /# tmp_b $end
$var wire 1 0# tmp_a $end
$var wire 2 1# aAddb [1:0] $end
$var reg 1 2# cout $end
$var reg 1 3# result $end
$upscope $end
$upscope $end
$scope begin genblk2[13] $end
$scope module ALU_1bin_obj $end
$var event 1 4# _s28 $end
$var wire 1 R Ainvert $end
$var wire 1 Q Binvert $end
$var wire 1 5# Cin $end
$var wire 1 6# aAndb $end
$var wire 1 7# aOrb $end
$var wire 2 8# operation [1:0] $end
$var wire 1 9# src1 $end
$var wire 1 :# src2 $end
$var wire 1 ;# tmp_b $end
$var wire 1 <# tmp_a $end
$var wire 2 =# aAddb [1:0] $end
$var reg 1 ># cout $end
$var reg 1 ?# result $end
$upscope $end
$upscope $end
$scope begin genblk2[14] $end
$scope module ALU_1bin_obj $end
$var event 1 @# _s28 $end
$var wire 1 R Ainvert $end
$var wire 1 Q Binvert $end
$var wire 1 A# Cin $end
$var wire 1 B# aAndb $end
$var wire 1 C# aOrb $end
$var wire 2 D# operation [1:0] $end
$var wire 1 E# src1 $end
$var wire 1 F# src2 $end
$var wire 1 G# tmp_b $end
$var wire 1 H# tmp_a $end
$var wire 2 I# aAddb [1:0] $end
$var reg 1 J# cout $end
$var reg 1 K# result $end
$upscope $end
$upscope $end
$scope begin genblk2[15] $end
$scope module ALU_1bin_obj $end
$var event 1 L# _s28 $end
$var wire 1 R Ainvert $end
$var wire 1 Q Binvert $end
$var wire 1 M# Cin $end
$var wire 1 N# aAndb $end
$var wire 1 O# aOrb $end
$var wire 2 P# operation [1:0] $end
$var wire 1 Q# src1 $end
$var wire 1 R# src2 $end
$var wire 1 S# tmp_b $end
$var wire 1 T# tmp_a $end
$var wire 2 U# aAddb [1:0] $end
$var reg 1 V# cout $end
$var reg 1 W# result $end
$upscope $end
$upscope $end
$scope begin genblk2[16] $end
$scope module ALU_1bin_obj $end
$var event 1 X# _s28 $end
$var wire 1 R Ainvert $end
$var wire 1 Q Binvert $end
$var wire 1 Y# Cin $end
$var wire 1 Z# aAndb $end
$var wire 1 [# aOrb $end
$var wire 2 \# operation [1:0] $end
$var wire 1 ]# src1 $end
$var wire 1 ^# src2 $end
$var wire 1 _# tmp_b $end
$var wire 1 `# tmp_a $end
$var wire 2 a# aAddb [1:0] $end
$var reg 1 b# cout $end
$var reg 1 c# result $end
$upscope $end
$upscope $end
$scope begin genblk2[17] $end
$scope module ALU_1bin_obj $end
$var event 1 d# _s28 $end
$var wire 1 R Ainvert $end
$var wire 1 Q Binvert $end
$var wire 1 e# Cin $end
$var wire 1 f# aAndb $end
$var wire 1 g# aOrb $end
$var wire 2 h# operation [1:0] $end
$var wire 1 i# src1 $end
$var wire 1 j# src2 $end
$var wire 1 k# tmp_b $end
$var wire 1 l# tmp_a $end
$var wire 2 m# aAddb [1:0] $end
$var reg 1 n# cout $end
$var reg 1 o# result $end
$upscope $end
$upscope $end
$scope begin genblk2[18] $end
$scope module ALU_1bin_obj $end
$var event 1 p# _s28 $end
$var wire 1 R Ainvert $end
$var wire 1 Q Binvert $end
$var wire 1 q# Cin $end
$var wire 1 r# aAndb $end
$var wire 1 s# aOrb $end
$var wire 2 t# operation [1:0] $end
$var wire 1 u# src1 $end
$var wire 1 v# src2 $end
$var wire 1 w# tmp_b $end
$var wire 1 x# tmp_a $end
$var wire 2 y# aAddb [1:0] $end
$var reg 1 z# cout $end
$var reg 1 {# result $end
$upscope $end
$upscope $end
$scope begin genblk2[19] $end
$scope module ALU_1bin_obj $end
$var event 1 |# _s28 $end
$var wire 1 R Ainvert $end
$var wire 1 Q Binvert $end
$var wire 1 }# Cin $end
$var wire 1 ~# aAndb $end
$var wire 1 !$ aOrb $end
$var wire 2 "$ operation [1:0] $end
$var wire 1 #$ src1 $end
$var wire 1 $$ src2 $end
$var wire 1 %$ tmp_b $end
$var wire 1 &$ tmp_a $end
$var wire 2 '$ aAddb [1:0] $end
$var reg 1 ($ cout $end
$var reg 1 )$ result $end
$upscope $end
$upscope $end
$scope begin genblk2[20] $end
$scope module ALU_1bin_obj $end
$var event 1 *$ _s28 $end
$var wire 1 R Ainvert $end
$var wire 1 Q Binvert $end
$var wire 1 +$ Cin $end
$var wire 1 ,$ aAndb $end
$var wire 1 -$ aOrb $end
$var wire 2 .$ operation [1:0] $end
$var wire 1 /$ src1 $end
$var wire 1 0$ src2 $end
$var wire 1 1$ tmp_b $end
$var wire 1 2$ tmp_a $end
$var wire 2 3$ aAddb [1:0] $end
$var reg 1 4$ cout $end
$var reg 1 5$ result $end
$upscope $end
$upscope $end
$scope begin genblk2[21] $end
$scope module ALU_1bin_obj $end
$var event 1 6$ _s28 $end
$var wire 1 R Ainvert $end
$var wire 1 Q Binvert $end
$var wire 1 7$ Cin $end
$var wire 1 8$ aAndb $end
$var wire 1 9$ aOrb $end
$var wire 2 :$ operation [1:0] $end
$var wire 1 ;$ src1 $end
$var wire 1 <$ src2 $end
$var wire 1 =$ tmp_b $end
$var wire 1 >$ tmp_a $end
$var wire 2 ?$ aAddb [1:0] $end
$var reg 1 @$ cout $end
$var reg 1 A$ result $end
$upscope $end
$upscope $end
$scope begin genblk2[22] $end
$scope module ALU_1bin_obj $end
$var event 1 B$ _s28 $end
$var wire 1 R Ainvert $end
$var wire 1 Q Binvert $end
$var wire 1 C$ Cin $end
$var wire 1 D$ aAndb $end
$var wire 1 E$ aOrb $end
$var wire 2 F$ operation [1:0] $end
$var wire 1 G$ src1 $end
$var wire 1 H$ src2 $end
$var wire 1 I$ tmp_b $end
$var wire 1 J$ tmp_a $end
$var wire 2 K$ aAddb [1:0] $end
$var reg 1 L$ cout $end
$var reg 1 M$ result $end
$upscope $end
$upscope $end
$scope begin genblk2[23] $end
$scope module ALU_1bin_obj $end
$var event 1 N$ _s28 $end
$var wire 1 R Ainvert $end
$var wire 1 Q Binvert $end
$var wire 1 O$ Cin $end
$var wire 1 P$ aAndb $end
$var wire 1 Q$ aOrb $end
$var wire 2 R$ operation [1:0] $end
$var wire 1 S$ src1 $end
$var wire 1 T$ src2 $end
$var wire 1 U$ tmp_b $end
$var wire 1 V$ tmp_a $end
$var wire 2 W$ aAddb [1:0] $end
$var reg 1 X$ cout $end
$var reg 1 Y$ result $end
$upscope $end
$upscope $end
$scope begin genblk2[24] $end
$scope module ALU_1bin_obj $end
$var event 1 Z$ _s28 $end
$var wire 1 R Ainvert $end
$var wire 1 Q Binvert $end
$var wire 1 [$ Cin $end
$var wire 1 \$ aAndb $end
$var wire 1 ]$ aOrb $end
$var wire 2 ^$ operation [1:0] $end
$var wire 1 _$ src1 $end
$var wire 1 `$ src2 $end
$var wire 1 a$ tmp_b $end
$var wire 1 b$ tmp_a $end
$var wire 2 c$ aAddb [1:0] $end
$var reg 1 d$ cout $end
$var reg 1 e$ result $end
$upscope $end
$upscope $end
$scope begin genblk2[25] $end
$scope module ALU_1bin_obj $end
$var event 1 f$ _s28 $end
$var wire 1 R Ainvert $end
$var wire 1 Q Binvert $end
$var wire 1 g$ Cin $end
$var wire 1 h$ aAndb $end
$var wire 1 i$ aOrb $end
$var wire 2 j$ operation [1:0] $end
$var wire 1 k$ src1 $end
$var wire 1 l$ src2 $end
$var wire 1 m$ tmp_b $end
$var wire 1 n$ tmp_a $end
$var wire 2 o$ aAddb [1:0] $end
$var reg 1 p$ cout $end
$var reg 1 q$ result $end
$upscope $end
$upscope $end
$scope begin genblk2[26] $end
$scope module ALU_1bin_obj $end
$var event 1 r$ _s28 $end
$var wire 1 R Ainvert $end
$var wire 1 Q Binvert $end
$var wire 1 s$ Cin $end
$var wire 1 t$ aAndb $end
$var wire 1 u$ aOrb $end
$var wire 2 v$ operation [1:0] $end
$var wire 1 w$ src1 $end
$var wire 1 x$ src2 $end
$var wire 1 y$ tmp_b $end
$var wire 1 z$ tmp_a $end
$var wire 2 {$ aAddb [1:0] $end
$var reg 1 |$ cout $end
$var reg 1 }$ result $end
$upscope $end
$upscope $end
$scope begin genblk2[27] $end
$scope module ALU_1bin_obj $end
$var event 1 ~$ _s28 $end
$var wire 1 R Ainvert $end
$var wire 1 Q Binvert $end
$var wire 1 !% Cin $end
$var wire 1 "% aAndb $end
$var wire 1 #% aOrb $end
$var wire 2 $% operation [1:0] $end
$var wire 1 %% src1 $end
$var wire 1 &% src2 $end
$var wire 1 '% tmp_b $end
$var wire 1 (% tmp_a $end
$var wire 2 )% aAddb [1:0] $end
$var reg 1 *% cout $end
$var reg 1 +% result $end
$upscope $end
$upscope $end
$scope begin genblk2[28] $end
$scope module ALU_1bin_obj $end
$var event 1 ,% _s28 $end
$var wire 1 R Ainvert $end
$var wire 1 Q Binvert $end
$var wire 1 -% Cin $end
$var wire 1 .% aAndb $end
$var wire 1 /% aOrb $end
$var wire 2 0% operation [1:0] $end
$var wire 1 1% src1 $end
$var wire 1 2% src2 $end
$var wire 1 3% tmp_b $end
$var wire 1 4% tmp_a $end
$var wire 2 5% aAddb [1:0] $end
$var reg 1 6% cout $end
$var reg 1 7% result $end
$upscope $end
$upscope $end
$scope begin genblk2[29] $end
$scope module ALU_1bin_obj $end
$var event 1 8% _s28 $end
$var wire 1 R Ainvert $end
$var wire 1 Q Binvert $end
$var wire 1 9% Cin $end
$var wire 1 :% aAndb $end
$var wire 1 ;% aOrb $end
$var wire 2 <% operation [1:0] $end
$var wire 1 =% src1 $end
$var wire 1 >% src2 $end
$var wire 1 ?% tmp_b $end
$var wire 1 @% tmp_a $end
$var wire 2 A% aAddb [1:0] $end
$var reg 1 B% cout $end
$var reg 1 C% result $end
$upscope $end
$upscope $end
$scope begin genblk2[30] $end
$scope module ALU_1bin_obj $end
$var event 1 D% _s28 $end
$var wire 1 R Ainvert $end
$var wire 1 Q Binvert $end
$var wire 1 E% Cin $end
$var wire 1 F% aAndb $end
$var wire 1 G% aOrb $end
$var wire 2 H% operation [1:0] $end
$var wire 1 I% src1 $end
$var wire 1 J% src2 $end
$var wire 1 K% tmp_b $end
$var wire 1 L% tmp_a $end
$var wire 2 M% aAddb [1:0] $end
$var reg 1 N% cout $end
$var reg 1 O% result $end
$upscope $end
$upscope $end
$scope begin genblk2[31] $end
$scope module ALU_1bin_obj $end
$var event 1 P% _s28 $end
$var wire 1 R Ainvert $end
$var wire 1 Q Binvert $end
$var wire 1 Q% Cin $end
$var wire 1 R% aAndb $end
$var wire 1 S% aOrb $end
$var wire 2 T% operation [1:0] $end
$var wire 1 U% src1 $end
$var wire 1 V% src2 $end
$var wire 1 W% tmp_b $end
$var wire 1 X% tmp_a $end
$var wire 2 Y% aAddb [1:0] $end
$var reg 1 Z% cout $end
$var reg 1 [% result $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
x[%
xZ%
bx Y%
xX%
xW%
xV%
xU%
bx T%
xS%
xR%
xQ%
1P%
xO%
xN%
bx M%
xL%
xK%
xJ%
xI%
bx H%
xG%
xF%
xE%
1D%
xC%
xB%
bx A%
x@%
x?%
x>%
x=%
bx <%
x;%
x:%
x9%
18%
x7%
x6%
bx 5%
x4%
x3%
x2%
x1%
bx 0%
x/%
x.%
x-%
1,%
x+%
x*%
bx )%
x(%
x'%
x&%
x%%
bx $%
x#%
x"%
x!%
1~$
x}$
x|$
bx {$
xz$
xy$
xx$
xw$
bx v$
xu$
xt$
xs$
1r$
xq$
xp$
bx o$
xn$
xm$
xl$
xk$
bx j$
xi$
xh$
xg$
1f$
xe$
xd$
bx c$
xb$
xa$
x`$
x_$
bx ^$
x]$
x\$
x[$
1Z$
xY$
xX$
bx W$
xV$
xU$
xT$
xS$
bx R$
xQ$
xP$
xO$
1N$
xM$
xL$
bx K$
xJ$
xI$
xH$
xG$
bx F$
xE$
xD$
xC$
1B$
xA$
x@$
bx ?$
x>$
x=$
x<$
x;$
bx :$
x9$
x8$
x7$
16$
x5$
x4$
bx 3$
x2$
x1$
x0$
x/$
bx .$
x-$
x,$
x+$
1*$
x)$
x($
bx '$
x&$
x%$
x$$
x#$
bx "$
x!$
x~#
x}#
1|#
x{#
xz#
bx y#
xx#
xw#
xv#
xu#
bx t#
xs#
xr#
xq#
1p#
xo#
xn#
bx m#
xl#
xk#
xj#
xi#
bx h#
xg#
xf#
xe#
1d#
xc#
xb#
bx a#
x`#
x_#
x^#
x]#
bx \#
x[#
xZ#
xY#
1X#
xW#
xV#
bx U#
xT#
xS#
xR#
xQ#
bx P#
xO#
xN#
xM#
1L#
xK#
xJ#
bx I#
xH#
xG#
xF#
xE#
bx D#
xC#
xB#
xA#
1@#
x?#
x>#
bx =#
x<#
x;#
x:#
x9#
bx 8#
x7#
x6#
x5#
14#
x3#
x2#
bx 1#
x0#
x/#
x.#
x-#
bx ,#
x+#
x*#
x)#
1(#
x'#
x&#
bx %#
x$#
x##
x"#
x!#
bx ~"
x}"
x|"
x{"
1z"
xy"
xx"
bx w"
xv"
xu"
xt"
xs"
bx r"
xq"
xp"
xo"
1n"
xm"
xl"
bx k"
xj"
xi"
xh"
xg"
bx f"
xe"
xd"
xc"
1b"
xa"
x`"
bx _"
x^"
x]"
x\"
x["
bx Z"
xY"
xX"
xW"
1V"
xU"
xT"
bx S"
xR"
xQ"
xP"
xO"
bx N"
xM"
xL"
xK"
1J"
xI"
xH"
bx G"
xF"
xE"
xD"
xC"
bx B"
xA"
x@"
x?"
1>"
x="
x<"
bx ;"
x:"
x9"
x8"
x7"
bx 6"
x5"
x4"
x3"
12"
x1"
x0"
bx /"
x."
x-"
x,"
x+"
bx *"
x)"
x("
x'"
1&"
x%"
x$"
bx #"
x""
x!"
x~
x}
bx |
x{
xz
xy
1x
xw
xv
bx u
xt
xs
xr
xq
bx p
xo
xn
xm
1l
xk
xj
bx i
xh
xg
xf
xe
bx d
xc
xb
xa
1`
x_
x^
bx ]
x\
x[
xZ
xY
bx X
xW
xV
xU
1T
bx S
xR
xQ
bx P
bx O
bx N
bx M
bx L
bx K
bx J
bx I
bx H
bx G
bx F
bx E
b100 D
bx C
bx B
bx A
b100000 @
bx ?
bx >
bx =
x<
b0xxxxxxxx ;
b0xx :
bx 9
bx 8
bx 7
bx 6
bx 5
bx 4
bx 3
bx 2
x1
bx 0
bx /
bx .
bx -
x,
0+
bx *
0)
bx (
bx '
0&
b100 %
b10 $
b0 #
0"
0!
$end
#5000
1k
1w
1%"
11"
1="
1I"
1U"
1a"
1m"
1y"
1'#
13#
1?#
1K#
1W#
1c#
1o#
1{#
1)$
15$
1A$
1M$
1Y$
1e$
1q$
1}$
1+%
17%
1C%
1O%
1[%
b11111111111111111111111111111110 P
0_
0W
0V
1c
1b
1o
0n
1{
0z
1)"
0("
15"
04"
1A"
0@"
1M"
0L"
1Y"
0X"
1e"
0d"
1q"
0p"
1}"
0|"
1+#
0*#
17#
06#
1C#
0B#
1O#
0N#
1[#
0Z#
1g#
0f#
1s#
0r#
1!$
0~#
1-$
0,$
19$
08$
1E$
0D$
1Q$
0P$
1]$
0\$
1i$
0h$
1u$
0t$
1#%
0"%
1/%
0.%
1;%
0:%
1G%
0F%
1S%
0R%
b0 ]
0\
1h
1t
1""
1."
1:"
1F"
1R"
1^"
1j"
1v"
1$#
10#
1<#
1H#
1T#
1`#
1l#
1x#
1&$
12$
1>$
1J$
1V$
1b$
1n$
1z$
1(%
14%
1@%
1L%
1X%
0[
1g
0s
0!"
0-"
09"
0E"
0Q"
0]"
0i"
0u"
0##
0/#
0;#
0G#
0S#
0_#
0k#
0w#
0%$
01$
0=$
0I$
0U$
0a$
0m$
0y$
0'%
03%
0?%
0K%
0W%
b100 /
b100 K
b100 S
1R
0U
0Q
b1 O
b1 X
b1 d
b1 p
b1 |
b1 *"
b1 6"
b1 B"
b1 N"
b1 Z"
b1 f"
b1 r"
b1 ~"
b1 ,#
b1 8#
b1 D#
b1 P#
b1 \#
b1 h#
b1 t#
b1 "$
b1 .$
b1 :$
b1 F$
b1 R$
b1 ^$
b1 j$
b1 v$
b1 $%
b1 0%
b1 <%
b1 H%
b1 T%
b1001 0
b1001 6
b1001 L
01
1,
b10 2
b10 5
b10 =
0<
b100010 ;
b0 :
b1 4
0Z
1f
0r
0~
0,"
08"
0D"
0P"
0\"
0h"
0t"
0"#
0.#
0:#
0F#
0R#
0^#
0j#
0v#
0$$
00$
0<$
0H$
0T$
0`$
0l$
0x$
0&%
02%
0>%
0J%
0V%
1Y
0e
0q
0}
0+"
07"
0C"
0O"
0["
0g"
0s"
0!#
0-#
09#
0E#
0Q#
0]#
0i#
0u#
0#$
0/$
0;$
0G$
0S$
0_$
0k$
0w$
0%%
01%
0=%
0I%
0U%
b1 9
b110011 7
b1 3
b11 F
b10 -
b10 J
b10 N
b10 I
b1 .
b1 H
b1 M
b1 G
b100 (
b100 A
b100 E
b1000001001000110110011 *
b1000001001000110110011 8
b1000001001000110110011 >
b0 '
b0 ?
b0 B
b0 C
b1 #
1!
#10000
0!
1"
#15000
0Z%
b1 Y%
0Q%
0N%
b1 M%
0E%
0B%
b1 A%
09%
06%
b1 5%
0-%
0*%
b1 )%
0!%
0|$
b1 {$
0s$
0p$
b1 o$
0g$
0d$
b1 c$
0[$
0X$
b1 W$
0O$
0L$
b1 K$
0C$
0@$
b1 ?$
07$
04$
b1 3$
0+$
0($
b1 '$
0}#
0z#
b1 y#
0q#
0n#
b1 m#
0e#
0b#
b1 a#
0Y#
0V#
b1 U#
0M#
0J#
b1 I#
0A#
0>#
b1 =#
05#
02#
b1 1#
0)#
0&#
b1 %#
0{"
0x"
b1 w"
0o"
0l"
b1 k"
0c"
0`"
b1 _"
0W"
0T"
b1 S"
0K"
0H"
b1 G"
0?"
0<"
b1 ;"
03"
00"
b1 /"
0'"
0$"
b1 #"
0y
0v
b1 u
1m
1j
0)
0+
0k
1w
1%"
11"
1="
1I"
1U"
1a"
1m"
1y"
1'#
13#
1?#
1K#
1W#
1c#
1o#
1{#
1)$
15$
1A$
1M$
1Y$
1e$
1q$
1}$
1+%
17%
1C%
1O%
b11111111111111111111111111111100 P
1[%
b10 i
1a
1^
0o
1W
1V
0b
1\
0t
b11 O
b11 X
b11 d
b11 p
b11 |
b11 *"
b11 6"
b11 B"
b11 N"
b11 Z"
b11 f"
b11 r"
b11 ~"
b11 ,#
b11 8#
b11 D#
b11 P#
b11 \#
b11 h#
b11 t#
b11 "$
b11 .$
b11 :$
b11 F$
b11 R$
b11 ^$
b11 j$
b11 v$
b11 $%
b11 0%
b11 <%
b11 H%
b11 T%
b10 ]
1[
0g
b101 4
b1011 0
b1011 6
b1011 L
1Z
0f
b10 /
b10 K
b10 S
0Y
1q
b101 9
b1101 3
b100 F
b1 -
b1 J
b1 N
b1 I
b100 .
b100 H
b100 M
b11 G
b1000 (
b1000 A
b1000 E
b1000000000100011101001000110011 *
b1000000000100011101001000110011 8
b1000000000100011101001000110011 >
b100 '
b100 ?
b100 B
b100 C
b10 #
1!
#20000
0!
#25000
0w
0k
b0 u
0m
0j
0%"
01"
0="
0I"
0U"
0a"
0m"
0y"
0'#
03#
0?#
0K#
0W#
0c#
0o#
0{#
0)$
05$
0A$
0M$
0Y$
0e$
0q$
0}$
0+%
07%
0C%
0O%
0[%
b0 P
0_
0a
0^
1,
b11 2
b11 5
b11 =
b1 :
11
0W
0c
0{
0)"
05"
0A"
0M"
0Y"
0e"
0q"
0}"
0+#
07#
0C#
0O#
0[#
0g#
0s#
0!$
0-$
09$
0E$
0Q$
0]$
0i$
0u$
0#%
0/%
0;%
0G%
0S%
b10100011 ;
0\
b0 i
0h
b0 #"
0""
b0 /"
0."
b0 ;"
0:"
b0 G"
0F"
b0 S"
0R"
b0 _"
0^"
b0 k"
0j"
b0 w"
0v"
b0 %#
0$#
b0 1#
00#
b0 =#
0<#
b0 I#
0H#
b0 U#
0T#
b0 a#
0`#
b0 m#
0l#
b0 y#
0x#
b0 '$
0&$
b0 3$
02$
b0 ?$
0>$
b0 K$
0J$
b0 W$
0V$
b0 c$
0b$
b0 o$
0n$
b0 {$
0z$
b0 )%
0(%
b0 5%
04%
b0 A%
0@%
b0 M%
0L%
b0 Y%
0X%
0V
0R
b10 O
b10 X
b10 d
b10 p
b10 |
b10 *"
b10 6"
b10 B"
b10 N"
b10 Z"
b10 f"
b10 r"
b10 ~"
b10 ,#
b10 8#
b10 D#
b10 P#
b10 \#
b10 h#
b10 t#
b10 "$
b10 .$
b10 :$
b10 F$
b10 R$
b10 ^$
b10 j$
b10 v$
b10 $%
b10 0%
b10 <%
b10 H%
b10 T%
b0 ]
0[
b0 4
b10 0
b10 6
b10 L
0Z
1&
b0 /
b0 K
b0 S
0q
b0 9
b0 7
b0 3
b0 F
b0 -
b0 J
b0 N
b0 I
b0 .
b0 H
b0 M
b0 G
b1100 (
b1100 A
b1100 E
b0 *
b0 8
b0 >
b1000 '
b1000 ?
b1000 B
b1000 C
b11 #
1!
#30000
0!
#35000
b10000 (
b10000 A
b10000 E
b1100 '
b1100 ?
b1100 B
b1100 C
b100 #
1!
#40000
0!
#45000
b10100 (
b10100 A
b10100 E
b10000 '
b10000 ?
b10000 B
b10000 C
b101 #
1!
#50000
0!
#55000
b11000 (
b11000 A
b11000 E
b10100 '
b10100 ?
b10100 B
b10100 C
b110 #
1!
#60000
0!
#65000
b11100 (
b11100 A
b11100 E
b11000 '
b11000 ?
b11000 B
b11000 C
b111 #
1!
#70000
0!
#75000
b100000 (
b100000 A
b100000 E
b11100 '
b11100 ?
b11100 B
b11100 C
b1000 #
1!
#80000
0!
#85000
b100100 (
b100100 A
b100100 E
b100000 '
b100000 ?
b100000 B
b100000 C
b1001 #
1!
#90000
0!
#95000
b101000 (
b101000 A
b101000 E
b100100 '
b100100 ?
b100100 B
b100100 C
b1010 #
1!
#100000
0!
#105000
b101100 (
b101100 A
b101100 E
b101000 '
b101000 ?
b101000 B
b101000 C
b1011 #
1!
#110000
0!
#115000
b110000 (
b110000 A
b110000 E
b101100 '
b101100 ?
b101100 B
b101100 C
b1100 #
1!
#120000
0!
#125000
b110100 (
b110100 A
b110100 E
b110000 '
b110000 ?
b110000 B
b110000 C
b1101 #
1!
#130000
0!
#135000
b111000 (
b111000 A
b111000 E
b110100 '
b110100 ?
b110100 B
b110100 C
b1110 #
1!
#140000
0!
#145000
b111100 (
b111100 A
b111100 E
b111000 '
b111000 ?
b111000 B
b111000 C
b1111 #
1!
#150000
0!
#155000
b1000000 (
b1000000 A
b1000000 E
b111100 '
b111100 ?
b111100 B
b111100 C
b10000 #
1!
#160000
0!
#165000
b1000100 (
b1000100 A
b1000100 E
b1000000 '
b1000000 ?
b1000000 B
b1000000 C
b10001 #
1!
#170000
0!
#175000
b1001000 (
b1001000 A
b1001000 E
b1000100 '
b1000100 ?
b1000100 B
b1000100 C
b10010 #
1!
#180000
0!
#185000
b1001100 (
b1001100 A
b1001100 E
b1001000 '
b1001000 ?
b1001000 B
b1001000 C
b10011 #
1!
#190000
0!
#195000
b1010000 (
b1010000 A
b1010000 E
b1001100 '
b1001100 ?
b1001100 B
b1001100 C
b10100 #
1!
#200000
0!
#205000
b1010100 (
b1010100 A
b1010100 E
b1010000 '
b1010000 ?
b1010000 B
b1010000 C
b10101 #
1!
#210000
0!
#215000
b1011000 (
b1011000 A
b1011000 E
b1010100 '
b1010100 ?
b1010100 B
b1010100 C
b10110 #
1!
#220000
0!
#225000
b1011100 (
b1011100 A
b1011100 E
b1011000 '
b1011000 ?
b1011000 B
b1011000 C
b10111 #
1!
#230000
0!
#235000
b1100000 (
b1100000 A
b1100000 E
b1011100 '
b1011100 ?
b1011100 B
b1011100 C
b11000 #
1!
#240000
0!
#245000
b1100100 (
b1100100 A
b1100100 E
b1100000 '
b1100000 ?
b1100000 B
b1100000 C
b11001 #
1!
#250000
0!
#255000
b1101000 (
b1101000 A
b1101000 E
b1100100 '
b1100100 ?
b1100100 B
b1100100 C
b11010 #
1!
#260000
0!
#265000
b1101100 (
b1101100 A
b1101100 E
b1101000 '
b1101000 ?
b1101000 B
b1101000 C
b11011 #
1!
#270000
0!
#275000
b1110000 (
b1110000 A
b1110000 E
b1101100 '
b1101100 ?
b1101100 B
b1101100 C
b11100 #
1!
#280000
0!
#285000
b1110100 (
b1110100 A
b1110100 E
b1110000 '
b1110000 ?
b1110000 B
b1110000 C
b11101 #
1!
#290000
0!
#295000
b1111000 (
b1111000 A
b1111000 E
b1110100 '
b1110100 ?
b1110100 B
b1110100 C
b11110 #
1!
#300000
0!
#305000
b1111100 (
b1111100 A
b1111100 E
b1111000 '
b1111000 ?
b1111000 B
b1111000 C
b11111 #
1!
#310000
0!
#315000
b10000000 (
b10000000 A
b10000000 E
b1111100 '
b1111100 ?
b1111100 B
b1111100 C
b100000 #
1!
#320000
0!
#325000
0&
bx /
bx K
bx S
x+
x)
x_
xa
x^
xk
xm
xj
xw
xy
xv
x%"
x'"
x$"
x1"
x3"
x0"
x="
x?"
x<"
xI"
xK"
xH"
xU"
xW"
xT"
xa"
xc"
x`"
xm"
xo"
xl"
xy"
x{"
xx"
x'#
x)#
x&#
x3#
x5#
x2#
x?#
xA#
x>#
xK#
xM#
xJ#
xW#
xY#
xV#
xc#
xe#
xb#
xo#
xq#
xn#
x{#
x}#
xz#
x)$
x+$
x($
x5$
x7$
x4$
xA$
xC$
x@$
xM$
xO$
xL$
xY$
x[$
xX$
xe$
xg$
xd$
xq$
xs$
xp$
x}$
x!%
x|$
x+%
x-%
x*%
x7%
x9%
x6%
xC%
xE%
xB%
xO%
xQ%
xN%
bx P
x[%
xZ%
x,
x<
x1
bx 2
bx 5
bx =
b0xxxxxxxx ;
xW
xV
xc
xb
xo
xn
x{
xz
x)"
x("
x5"
x4"
xA"
x@"
xM"
xL"
xY"
xX"
xe"
xd"
xq"
xp"
x}"
x|"
x+#
x*#
x7#
x6#
xC#
xB#
xO#
xN#
x[#
xZ#
xg#
xf#
xs#
xr#
x!$
x~#
x-$
x,$
x9$
x8$
xE$
xD$
xQ$
xP$
x]$
x\$
xi$
xh$
xu$
xt$
x#%
x"%
x/%
x.%
x;%
x:%
xG%
xF%
xS%
xR%
x[
xg
xs
x!"
x-"
x9"
xE"
xQ"
x]"
xi"
xu"
x##
x/#
x;#
xG#
xS#
x_#
xk#
xw#
x%$
x1$
x=$
xI$
xU$
xa$
xm$
xy$
x'%
x3%
x?%
xK%
xW%
bx ]
x\
bx i
xh
bx u
xt
bx #"
x""
bx /"
x."
bx ;"
x:"
bx G"
xF"
bx S"
xR"
bx _"
x^"
bx k"
xj"
bx w"
xv"
bx %#
x$#
bx 1#
x0#
bx =#
x<#
bx I#
xH#
bx U#
xT#
bx a#
x`#
bx m#
xl#
bx y#
xx#
bx '$
x&$
bx 3$
x2$
bx ?$
x>$
bx K$
xJ$
bx W$
xV$
bx c$
xb$
bx o$
xn$
bx {$
xz$
bx )%
x(%
bx 5%
x4%
bx A%
x@%
bx M%
xL%
bx Y%
xX%
b0xx :
bx 4
xZ
xf
xr
x~
x,"
x8"
xD"
xP"
x\"
xh"
xt"
x"#
x.#
x:#
xF#
xR#
x^#
xj#
xv#
x$$
x0$
x<$
xH$
xT$
x`$
xl$
xx$
x&%
x2%
x>%
xJ%
xV%
xY
xe
xq
x}
x+"
x7"
xC"
xO"
x["
xg"
xs"
x!#
x-#
x9#
xE#
xQ#
x]#
xi#
xu#
x#$
x/$
x;$
xG$
xS$
x_$
xk$
xw$
x%%
x1%
x=%
xI%
xU%
bx 9
bx 7
bx 3
bx F
bx -
bx J
bx N
bx I
bx .
bx H
bx M
bx G
b10000100 (
b10000100 A
b10000100 E
bx *
bx 8
bx >
b10000000 '
b10000000 ?
b10000000 B
b10000000 C
b100001 #
1!
#330000
0!
#335000
b10001000 (
b10001000 A
b10001000 E
b10000100 '
b10000100 ?
b10000100 B
b10000100 C
b100010 #
1!
#340000
0!
#345000
b10001100 (
b10001100 A
b10001100 E
b10001000 '
b10001000 ?
b10001000 B
b10001000 C
b100011 #
1!
#350000
0!
#355000
b10010000 (
b10010000 A
b10010000 E
b10001100 '
b10001100 ?
b10001100 B
b10001100 C
b100100 #
1!
#360000
0!
#365000
b10010100 (
b10010100 A
b10010100 E
b10010000 '
b10010000 ?
b10010000 B
b10010000 C
b100101 #
1!
#370000
0!
#375000
b10011000 (
b10011000 A
b10011000 E
b10010100 '
b10010100 ?
b10010100 B
b10010100 C
b100110 #
1!
#380000
0!
#385000
b10011100 (
b10011100 A
b10011100 E
b10011000 '
b10011000 ?
b10011000 B
b10011000 C
b100111 #
1!
#390000
0!
#395000
b10100000 (
b10100000 A
b10100000 E
b10011100 '
b10011100 ?
b10011100 B
b10011100 C
b101000 #
1!
#400000
0!
#405000
b10100100 (
b10100100 A
b10100100 E
b10100000 '
b10100000 ?
b10100000 B
b10100000 C
b101001 #
1!
#410000
0!
#415000
b10101000 (
b10101000 A
b10101000 E
b10100100 '
b10100100 ?
b10100100 B
b10100100 C
b101010 #
1!
#420000
0!
#425000
b10101100 (
b10101100 A
b10101100 E
b10101000 '
b10101000 ?
b10101000 B
b10101000 C
b101011 #
1!
#430000
0!
#435000
b10110000 (
b10110000 A
b10110000 E
b10101100 '
b10101100 ?
b10101100 B
b10101100 C
b101100 #
1!
#440000
0!
#445000
b10110100 (
b10110100 A
b10110100 E
b10110000 '
b10110000 ?
b10110000 B
b10110000 C
b101101 #
1!
#450000
0!
#455000
b10111000 (
b10111000 A
b10111000 E
b10110100 '
b10110100 ?
b10110100 B
b10110100 C
b101110 #
1!
#460000
0!
#465000
b10111100 (
b10111100 A
b10111100 E
b10111000 '
b10111000 ?
b10111000 B
b10111000 C
b101111 #
1!
#470000
0!
#475000
b11000000 (
b11000000 A
b11000000 E
b10111100 '
b10111100 ?
b10111100 B
b10111100 C
b110000 #
1!
#480000
0!
#485000
b11000100 (
b11000100 A
b11000100 E
b11000000 '
b11000000 ?
b11000000 B
b11000000 C
b110001 #
1!
#490000
0!
#495000
b11001000 (
b11001000 A
b11001000 E
b11000100 '
b11000100 ?
b11000100 B
b11000100 C
b110010 #
1!
#500000
0!
#505000
b11001100 (
b11001100 A
b11001100 E
b11001000 '
b11001000 ?
b11001000 B
b11001000 C
b110011 #
1!
#510000
0!
#515000
b11010000 (
b11010000 A
b11010000 E
b11001100 '
b11001100 ?
b11001100 B
b11001100 C
b110100 #
1!
#520000
0!
#525000
b11010100 (
b11010100 A
b11010100 E
b11010000 '
b11010000 ?
b11010000 B
b11010000 C
b110101 #
1!
#530000
0!
#535000
b11011000 (
b11011000 A
b11011000 E
b11010100 '
b11010100 ?
b11010100 B
b11010100 C
b110110 #
1!
#540000
0!
#545000
b11011100 (
b11011100 A
b11011100 E
b11011000 '
b11011000 ?
b11011000 B
b11011000 C
b110111 #
1!
#550000
0!
#555000
b11100000 (
b11100000 A
b11100000 E
b11011100 '
b11011100 ?
b11011100 B
b11011100 C
b111000 #
1!
#560000
0!
#565000
b11100100 (
b11100100 A
b11100100 E
b11100000 '
b11100000 ?
b11100000 B
b11100000 C
b111001 #
1!
#570000
0!
#575000
b11101000 (
b11101000 A
b11101000 E
b11100100 '
b11100100 ?
b11100100 B
b11100100 C
b111010 #
1!
#580000
0!
#585000
b11101100 (
b11101100 A
b11101100 E
b11101000 '
b11101000 ?
b11101000 B
b11101000 C
b111011 #
1!
#590000
0!
#595000
b11110000 (
b11110000 A
b11110000 E
b11101100 '
b11101100 ?
b11101100 B
b11101100 C
b111100 #
1!
#600000
0!
#605000
b11110100 (
b11110100 A
b11110100 E
b11110000 '
b11110000 ?
b11110000 B
b11110000 C
b111101 #
1!
#610000
0!
#615000
b11111000 (
b11111000 A
b11111000 E
b11110100 '
b11110100 ?
b11110100 B
b11110100 C
b111110 #
1!
#620000
0!
#625000
b11111100 (
b11111100 A
b11111100 E
b11111000 '
b11111000 ?
b11111000 B
b11111000 C
b111111 #
1!
#630000
0!
#635000
b100000000 (
b100000000 A
b100000000 E
b11111100 '
b11111100 ?
b11111100 B
b11111100 C
b1000000 #
1!
#640000
0!
#645000
b100000100 (
b100000100 A
b100000100 E
b100000000 '
b100000000 ?
b100000000 B
b100000000 C
b1000001 #
1!
#650000
0!
#655000
b100001000 (
b100001000 A
b100001000 E
b100000100 '
b100000100 ?
b100000100 B
b100000100 C
b1000010 #
1!
#660000
0!
#665000
b100001100 (
b100001100 A
b100001100 E
b100001000 '
b100001000 ?
b100001000 B
b100001000 C
b1000011 #
1!
#670000
0!
#675000
b100010000 (
b100010000 A
b100010000 E
b100001100 '
b100001100 ?
b100001100 B
b100001100 C
b1000100 #
1!
#680000
0!
#685000
b100010100 (
b100010100 A
b100010100 E
b100010000 '
b100010000 ?
b100010000 B
b100010000 C
b1000101 #
1!
#690000
0!
#695000
b100011000 (
b100011000 A
b100011000 E
b100010100 '
b100010100 ?
b100010100 B
b100010100 C
b1000110 #
1!
#700000
0!
#705000
b100011100 (
b100011100 A
b100011100 E
b100011000 '
b100011000 ?
b100011000 B
b100011000 C
b1000111 #
1!
#710000
0!
#715000
b100100000 (
b100100000 A
b100100000 E
b100011100 '
b100011100 ?
b100011100 B
b100011100 C
b1001000 #
1!
#720000
0!
#725000
b100100100 (
b100100100 A
b100100100 E
b100100000 '
b100100000 ?
b100100000 B
b100100000 C
b1001001 #
1!
#730000
0!
#735000
b100101000 (
b100101000 A
b100101000 E
b100100100 '
b100100100 ?
b100100100 B
b100100100 C
b1001010 #
1!
#740000
0!
#745000
b100101100 (
b100101100 A
b100101100 E
b100101000 '
b100101000 ?
b100101000 B
b100101000 C
b1001011 #
1!
#750000
0!
#755000
b100110000 (
b100110000 A
b100110000 E
b100101100 '
b100101100 ?
b100101100 B
b100101100 C
b1001100 #
1!
#760000
0!
#765000
b100110100 (
b100110100 A
b100110100 E
b100110000 '
b100110000 ?
b100110000 B
b100110000 C
b1001101 #
1!
#770000
0!
#775000
b100111000 (
b100111000 A
b100111000 E
b100110100 '
b100110100 ?
b100110100 B
b100110100 C
b1001110 #
1!
#780000
0!
#785000
b100111100 (
b100111100 A
b100111100 E
b100111000 '
b100111000 ?
b100111000 B
b100111000 C
b1001111 #
1!
#790000
0!
#795000
b101000000 (
b101000000 A
b101000000 E
b100111100 '
b100111100 ?
b100111100 B
b100111100 C
b1010000 #
1!
#800000
0!
#805000
b101000100 (
b101000100 A
b101000100 E
b101000000 '
b101000000 ?
b101000000 B
b101000000 C
b1010001 #
1!
#810000
0!
#815000
b101001000 (
b101001000 A
b101001000 E
b101000100 '
b101000100 ?
b101000100 B
b101000100 C
b1010010 #
1!
#820000
0!
#825000
b101001100 (
b101001100 A
b101001100 E
b101001000 '
b101001000 ?
b101001000 B
b101001000 C
b1010011 #
1!
#830000
0!
#835000
b101010000 (
b101010000 A
b101010000 E
b101001100 '
b101001100 ?
b101001100 B
b101001100 C
b1010100 #
1!
#840000
0!
#845000
b101010100 (
b101010100 A
b101010100 E
b101010000 '
b101010000 ?
b101010000 B
b101010000 C
b1010101 #
1!
#850000
0!
#855000
b101011000 (
b101011000 A
b101011000 E
b101010100 '
b101010100 ?
b101010100 B
b101010100 C
b1010110 #
1!
#860000
0!
#865000
b101011100 (
b101011100 A
b101011100 E
b101011000 '
b101011000 ?
b101011000 B
b101011000 C
b1010111 #
1!
#870000
0!
#875000
b101100000 (
b101100000 A
b101100000 E
b101011100 '
b101011100 ?
b101011100 B
b101011100 C
b1011000 #
1!
#880000
0!
#885000
b101100100 (
b101100100 A
b101100100 E
b101100000 '
b101100000 ?
b101100000 B
b101100000 C
b1011001 #
1!
#890000
0!
#895000
b101101000 (
b101101000 A
b101101000 E
b101100100 '
b101100100 ?
b101100100 B
b101100100 C
b1011010 #
1!
#900000
0!
#905000
b101101100 (
b101101100 A
b101101100 E
b101101000 '
b101101000 ?
b101101000 B
b101101000 C
b1011011 #
1!
#910000
0!
#915000
b101110000 (
b101110000 A
b101110000 E
b101101100 '
b101101100 ?
b101101100 B
b101101100 C
b1011100 #
1!
#920000
0!
#925000
b101110100 (
b101110100 A
b101110100 E
b101110000 '
b101110000 ?
b101110000 B
b101110000 C
b1011101 #
1!
#930000
0!
#935000
b101111000 (
b101111000 A
b101111000 E
b101110100 '
b101110100 ?
b101110100 B
b101110100 C
b1011110 #
1!
#940000
0!
#945000
b101111100 (
b101111100 A
b101111100 E
b101111000 '
b101111000 ?
b101111000 B
b101111000 C
b1011111 #
1!
#950000
0!
#955000
b110000000 (
b110000000 A
b110000000 E
b101111100 '
b101111100 ?
b101111100 B
b101111100 C
b1100000 #
1!
#960000
0!
#965000
b110000100 (
b110000100 A
b110000100 E
b110000000 '
b110000000 ?
b110000000 B
b110000000 C
b1100001 #
1!
#970000
0!
#975000
b110001000 (
b110001000 A
b110001000 E
b110000100 '
b110000100 ?
b110000100 B
b110000100 C
b1100010 #
1!
#980000
0!
#985000
b110001100 (
b110001100 A
b110001100 E
b110001000 '
b110001000 ?
b110001000 B
b110001000 C
b1100011 #
1!
#990000
0!
#995000
b110010000 (
b110010000 A
b110010000 E
b110001100 '
b110001100 ?
b110001100 B
b110001100 C
b1100100 #
1!
#1000000
0!
#1005000
b110010100 (
b110010100 A
b110010100 E
b110010000 '
b110010000 ?
b110010000 B
b110010000 C
b1100101 #
1!
#1010000
0!
